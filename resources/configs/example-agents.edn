;; Example configuration showing how to define multiple agents
;; Each agent becomes its own tool in the MCP server

{;; Standard configuration options
 :allowed-directories ["." "src" "test" "resources"]
 :cljfmt true
 :bash-over-nrepl true

 ;; Agent definitions - each becomes a separate tool
 ;; IMPORTANT: Agents have NO tools by default. You must explicitly list tools in :enable-tools
 :agents [{:id :research-agent
           :name "research_agent"
           :description "Specialized agent for researching code patterns and finding examples across the codebase"
           :system-message "You are a research specialist focused on finding code patterns, examples, and understanding project structure. Be thorough in your analysis and provide specific file locations and code snippets."
           :model :anthropic/claude-3-5-sonnet-20241022 ; Optional: specific model
           :context true ; Use default project context (PROJECT_SUMMARY.md and code index)
           :enable-tools [:grep :glob-files :read-file :clojure-inspect-project] ; Must specify tools explicitly
           :disable-tools nil}

          {:id :refactor-assistant
           :name "refactor_assistant"
           :description "Agent specialized in analyzing code for refactoring opportunities"
           :system-message "You are a refactoring specialist. Analyze code for patterns that could be improved, suggest better abstractions, and identify duplicate code. Focus on readability and maintainability."
           :context ["PROJECT_SUMMARY.md" "doc/LLM_CODE_STYLE.md"] ; Specific files for context
           :enable-tools [:read-file :grep :glob-files]
           :disable-tools [:bash]}

          {:id :test-explorer
           :name "test_explorer"
           :description "Agent for exploring and understanding test files"
           :system-message "You are a test exploration specialist. Help understand test structure, find relevant tests, and explain test patterns. Be concise and focus on test-specific insights."
           :context false ; No default context
           :enable-tools [:read-file :glob-files :grep]
           :disable-tools [:bash :clojure-inspect-project]}

          {:id :doc-reader
           :name "doc_reader"
           :description "Agent optimized for reading and summarizing documentation"
           :system-message "You are a documentation specialist. Read and summarize documentation clearly and concisely. Focus on key concepts and practical usage."
           ;; model not specified - will use default
           :context ["README.md" "doc/"] ; Documentation-focused context
           :enable-tools [:read-file :glob-files]
           :disable-tools [:grep :bash]}

          {:id :code-writer
           :name "code_writer"
           :description "Agent that can write and modify code files"
           :system-message "You are a code writing assistant. You can create new files, edit existing ones, and refactor code. Always test code in the REPL before writing to files."
           :context true
           ;; Can evaluate code and write files
           :enable-tools [:clojure-eval :file-write :file-edit :clojure-edit
                          :clojure-edit-replace-sexp :read-file :grep :glob-files]
           :disable-tools nil}

          {:id :full-access-agent
           :name "full_access_agent"
           :description "Agent with access to ALL available tools - use with caution"
           :system-message "You are a full-access assistant with all tools at your disposal. Use tools responsibly and always confirm destructive operations."
           :context true
           ;; Special keyword :all enables all tools
           :enable-tools [:all] ; Gives access to every available tool
           :disable-tools [:dispatch-agent]}] ; But still can disable specific ones

 ;; Optional: Define custom models for agents to use
 :models {:anthropic/claude-3-5-sonnet-20241022
          {:model-name "claude-3-5-sonnet-20241022"
           :api-key [:env "ANTHROPIC_API_KEY"]
           :temperature 0.3
           :max-tokens 4096}

          :openai/gpt-4-turbo
          {:model-name "gpt-4-turbo-preview"
           :api-key [:env "OPENAI_API_KEY"]
           :temperature 0.2
           :max-tokens 2048}}}